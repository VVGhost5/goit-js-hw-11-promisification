{"version":3,"sources":["webpack:///./js/task-1.js","webpack:///./js/task-2.js","webpack:///./js/task-3.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","makeTransaction","transaction","reject","min","max","Math","floor","random","id","logSuccess","logError","warn","amount","catch"],"mappings":"2JAAMA,EAAQ,SAAAC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,WACTD,EAAQF,KACPA,OAIDI,EAAS,SAAAC,GAAI,OAAIC,QAAQC,IAAR,kBAA8BF,EAA9B,OAEvBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,G,kCCZXK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACjC,OAAO,IAAIb,SAAQ,SAAAC,GAKjBA,EAJqBW,EAASE,KAAI,SAAAC,GAAI,OACpCA,EAAKN,OAASI,EAAd,iBAA8BE,EAA9B,CAAoCL,QAASK,EAAKL,SAAWK,UAM7DZ,EAAS,SAAAa,GAAY,OAAIX,QAAQY,MAAMD,IAE7CL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ,GCnBnC,IAIMe,EAAkB,SAAAC,GACtB,OAAO,IAAInB,SAAQ,SAACC,EAASmB,GAC3B,IAN+BC,EAAKC,EAM9BxB,GANyBuB,EAMS,IANJC,EAMS,IALxCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAOlDnB,YAAW,WACUqB,KAAKE,SAAW,IAGjCxB,EAAQkB,EAAYO,GAAI5B,GAE1BsB,EAAOD,EAAYO,MAClB5B,OAID6B,EAAa,SAACD,EAAItB,GACtBC,QAAQC,IAAR,eAA2BoB,EAA3B,iBAA8CtB,EAA9C,OAGIwB,EAAW,SAAAF,GACfrB,QAAQwB,KAAR,gCAA6CH,EAA7C,8BAyCFR,EAAgB,CACdQ,GAAI,GACJI,OAAQ,MAEPvB,KAAKoB,GACLI,MAAMH,GAETV,EAAgB,CACdQ,GAAI,GACJI,OAAQ,MAEPvB,KAAKoB,GACLI,MAAMH,GAETV,EAAgB,CACdQ,GAAI,GACJI,OAAQ,KAEPvB,KAAKoB,GACLI,MAAMH,GAETV,EAAgB,CACdQ,GAAI,GACJI,OAAQ,MAEPvB,KAAKoB,GACLI,MAAMH,K","file":"main.6160122a20775e0e774c.js","sourcesContent":["const delay = ms => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(ms);\r\n    }, ms);\r\n  });\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\ndelay(2000).then(logger);\r\ndelay(1000).then(logger);\r\ndelay(1500).then(logger);\r\n","const users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n  return new Promise(resolve => {\r\n    const updatedUsers = allUsers.map(user =>\r\n      user.name === userName ? { ...user, active: !user.active } : user,\r\n    );\r\n\r\n    resolve(updatedUsers);\r\n  });\r\n};\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);\r\n","const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = transaction => {\r\n  return new Promise((resolve, reject) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve(transaction.id, delay);\r\n      }\r\n      reject(transaction.id);\r\n    }, delay);\r\n  });\r\n};\r\n\r\nconst logSuccess = (id, time) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Работает так\r\n */\r\n// makeTransaction(\r\n//   {\r\n//     id: 70,\r\n//     amount: 150,\r\n//   },\r\n//   logSuccess,\r\n//   logError,\r\n// );\r\n// makeTransaction(\r\n//   {\r\n//     id: 71,\r\n//     amount: 230,\r\n//   },\r\n//   logSuccess,\r\n//   logError,\r\n// );\r\n// makeTransaction(\r\n//   {\r\n//     id: 72,\r\n//     amount: 75,\r\n//   },\r\n//   logSuccess,\r\n//   logError,\r\n// );\r\n// makeTransaction(\r\n//   {\r\n//     id: 73,\r\n//     amount: 100,\r\n//   },\r\n//   logSuccess,\r\n//   logError,\r\n// );\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({\r\n  id: 70,\r\n  amount: 150,\r\n})\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({\r\n  id: 71,\r\n  amount: 230,\r\n})\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({\r\n  id: 72,\r\n  amount: 75,\r\n})\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({\r\n  id: 73,\r\n  amount: 100,\r\n})\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n"],"sourceRoot":""}